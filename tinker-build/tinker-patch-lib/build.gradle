apply plugin: 'java-library'

version rootProject.ext.VERSION_NAME
group rootProject.ext.GROUP

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

sourceCompatibility = rootProject.ext.javaVersion
targetCompatibility = rootProject.ext.javaVersion

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':tinker-commons')
    api group: 'com.tencent.mm', name: 'apk-parser-lib', version: '1.2.3'
    implementation group: 'com.google.guava', name: 'guava', version: '14.0.1'
    implementation group: 'org.ow2.asm', name: 'asm', version: '6.0'
    implementation (group: 'org.smali', name: 'dexlib2', version: '2.3.1') {
        exclude group: 'com.google.guava'
    }
    implementation group: 'dom4j', name: 'dom4j', version: '1.6.1'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }

        resources {
            srcDir 'src/main/resources'
        }
    }
}


//apply from: rootProject.file('gradle/PublishArtifact.gradle')
apply plugin: 'maven'
boolean isLocalMaven = rootProject.ext.IS_LOCAL_MAVEN
uploadArchives {
    def mavenUrl = isLocalMaven ? '../../repo' : rootProject.ext.LIB_REPO_URL
    repositories {
        mavenDeployer {
            pom.version = rootProject.ext.LIB_VERSION_NAME
            pom.artifactId = POM_ARTIFACT_ID
            pom.groupId = rootProject.ext.GROUP
            pom.packaging = POM_PACKAGING
            //文件发布到下面目录
            repository(url: uri(mavenUrl)) {
                String info = "-----> start upload : ${POM_NAME} ,and the url is: ${mavenUrl} <----------"
                System.err.println(info)
                authentication(userName: rootProject.ext.NEXUS_USERNAME, password: rootProject.ext.NEXUS_PASSWORD)
            }

        }
    }
}
