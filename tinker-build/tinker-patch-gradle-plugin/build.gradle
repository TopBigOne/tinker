apply plugin: 'groovy'

version rootProject.ext.VERSION_NAME
group rootProject.ext.GROUP

sourceCompatibility = rootProject.ext.javaVersion
targetCompatibility = rootProject.ext.javaVersion

dependencies {
    implementation gradleApi()
    implementation localGroovy()
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':tinker-build:tinker-patch-lib')
    implementation 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
    implementation 'commons-codec:commons-codec:1.10'
    compileOnly 'com.android.tools.build:gradle:4.2.0'
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        groovy {
            srcDir 'src/main/groovy'
        }

        resources {
            srcDir 'src/main/resources'
        }
    }
}


//apply from: rootProject.file('gradle/PublishArtifact.gradle')
apply plugin: 'maven'
boolean isLocalMaven = rootProject.ext.IS_LOCAL_MAVEN
uploadArchives {
    def mavenUrl = isLocalMaven ? '../../repo' : rootProject.ext.LIB_REPO_URL
    repositories {
        mavenDeployer {
            pom.version = rootProject.ext.LIB_VERSION_NAME
            pom.artifactId = POM_ARTIFACT_ID
            pom.groupId = rootProject.ext.GROUP
            pom.packaging = POM_PACKAGING
            //文件发布到下面目录
            repository(url: uri(mavenUrl)) {
                String info = "-----> start upload : ${POM_NAME} ,and the url is: ${mavenUrl} <----------"
                System.err.println(info)
                authentication(userName: rootProject.ext.NEXUS_USERNAME, password: rootProject.ext.NEXUS_PASSWORD)
            }

        }
    }
}

