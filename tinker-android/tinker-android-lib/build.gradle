apply plugin: 'com.android.library'

version rootProject.ext.VERSION_NAME
group rootProject.ext.GROUP

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        buildConfigField "String", "TINKER_VERSION", "\"${rootProject.ext.VERSION_NAME}\""

        manifestPlaceholders = [TINKER_VERSION: "${rootProject.ext.VERSION_NAME}"]

        consumerProguardFiles file('../consumer-proguard.txt')
    }

    lintOptions {
        disable 'LongLogTag'
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation project(':tinker-android:tinker-android-anno-support')
    api project(':tinker-android:tinker-android-loader')
    api project(':tinker-commons')
}

task buildTinkerSdk(type: Copy, dependsOn: [build]) {
    group = "tinker"
    from("$buildDir/outputs/aar/") {
        include "${project.getName()}-release.aar"
    }

    into(rootProject.file("buildSdk/android/"))
    rename { String fileName ->
        fileName.replace("release", "${version}")
    }
}


//apply from: rootProject.file('gradle/PublishArtifact.gradle')
apply plugin: 'maven'
boolean isLocalMaven = rootProject.ext.IS_LOCAL_MAVEN
uploadArchives {
    def mavenUrl = isLocalMaven ? '../../repo' : rootProject.ext.LIB_REPO_URL
    repositories {
        mavenDeployer {
            pom.version = rootProject.ext.LIB_VERSION_NAME
            pom.artifactId = POM_ARTIFACT_ID
            pom.groupId = rootProject.ext.GROUP
            pom.packaging = POM_PACKAGING
            //文件发布到下面目录
            repository(url: uri(mavenUrl)) {
                String info = "-----> start upload : ${POM_NAME} ,and the url is: ${mavenUrl} <----------"
                System.err.println(info)
                authentication(userName: rootProject.ext.NEXUS_USERNAME, password: rootProject.ext.NEXUS_PASSWORD)
            }

        }
    }
}




